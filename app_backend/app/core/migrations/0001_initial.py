# Generated by Django 2.2.16 on 2021-02-04 03:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(blank=True, max_length=55, null=True, unique=True)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'admin'), (2, 'core_group'), (3, 'coordinator'), (4, 'organizer'), (5, 'vendor')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'User',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('pk_vendor_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('vendor_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('vendor_name', models.CharField(max_length=150)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('fk_created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Vendor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('pk_item_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('item_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('item_name', models.CharField(max_length=45)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('fk_created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('vendors', models.ManyToManyField(related_name='items', to='core.Vendor')),
            ],
            options={
                'db_table': 'Item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('pk_coupon_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('coupon_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('redeemed', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('redeemed_on', models.DateTimeField(blank=True, null=True)),
                ('fk_assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assigned_to', to=settings.AUTH_USER_MODEL)),
                ('fk_cg_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cg_user', to=settings.AUTH_USER_MODEL)),
                ('fk_coordinator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coordinator', to=settings.AUTH_USER_MODEL)),
                ('fk_created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('fk_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Item')),
                ('fk_organizer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organizer', to=settings.AUTH_USER_MODEL)),
                ('fk_vendor_redeemed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Vendor')),
            ],
            options={
                'db_table': 'Coupon',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('pk_committee_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('committee_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('committee_name', models.CharField(max_length=150)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('fk_created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Committee',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='fk_committee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Committee'),
        ),
        migrations.AddField(
            model_name='user',
            name='fk_vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Vendor'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
